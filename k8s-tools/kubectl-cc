#! /bin/bash
# kubectl cc (change cluster)
# 将k8s配置文件放在.kube下的configs下保存为x.yaml文件
# 将本脚本添加可执行权限放到path下即可使用kubectl cc 快速通过切换配置文件来切换集群

red='\033[91m'
green='\033[92m'
yellow='\033[93m'
magenta='\033[95m'
cyan='\033[96m'
none='\033[0m'

_red()    { echo -e ${red}$*${none}; }
_green()  { echo -e ${green}$*${none}; }
_yellow() { echo -e ${yellow}$*${none}; }
_magenta(){ echo -e ${magenta}$*${none}; }
_cyan()   { echo -e ${cyan}$*${none}; }
_none()   { echo -e ${nonex}$*${none}; }

choice=""
dir="$HOME/.kube/configs"
kubeconf="$HOME/.kube/config"
self=$(readlink -f "$0")

link(){
    if [ -z "$choice" ]; then
        _red 选择为空~
        exit 1
    fi

    ln -f -s $dir/$choice.yaml $HOME/.kube/config
    _yellow 切换到$choice
}

list(){
    # 如果是从终端启动且安装了fzf则使用fzf进行模糊选择
    if [ -x "$(command -v fzf)" ] && [ -t 0 ]; then
        choice=$(FZF_DEFAULT_COMMAND="$self" fzf --ansi --no-preview)
    else

        cur=$(basename $(readlink $kubeconf))
        cur=${cur%?????}

        for l in $(basename $dir/*yaml); do 
            name=${l%?????}

            if [ "$cur" = "$name" ];then
                _yellow $cur
                continue
            fi 
            echo $name
        done
        exit 0
    fi
}

# 没有参数就list所有的文件有参数有就切换到对应的文件
if [[ $# -eq 0 ]];then
   list
   link
fi

# 等于则切换到对应的文件去
if [[ $# -eq 1 ]];then
   choice=$1
   link
fi


if [[ $# -gt 1 ]];then
   echo "参数过多"
fi
